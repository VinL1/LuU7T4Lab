import java.util.ArrayList;

public class Airport
{
    /** A list of the flights into and out of this airport
     *  Guaranteed not to be null and to contain only non-null entries
     */
    private ArrayList<Flight> allFlights;

    public Airport(ArrayList<Flight> flights)
    {
        allFlights = flights;
    }

    public ArrayList<Flight> getAllFlights()
    {
        return allFlights;
    }

    /** Returns the revenue generated by all flights at the airport,
     *  as described in part (a)
     */
    public double getTotalRevenue()
    {
        double total = 0;
        for (Flight flights : allFlights) {
            if (flights.getCapacity() > flights.getNumPassengers()) {
                total += flights.getNumPassengers() * flights.getPrice();
            }
            else {
                total += flights.getCapacity() * flights.getPrice();
            }
        }
        return total;
    }

    /** Updates the list of flights by removing certain flights and
     *  returns the total number of passengers whose flights were removed,
     *  as described in part (b)
     */
    public int updateFlights()
    {
        int count = 0;
        for (int i = 0; i < allFlights.size(); i ++) {
            if ((double) allFlights.get(i).getNumPassengers() / allFlights.get(i).getCapacity() < .2){
                count += allFlights.remove(i).getNumPassengers();
            }
        }
        return count;
    }
}